#!/usr/bin/env node
// -*- mode: js -*-
/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

/*
 * Copyright (c) 2018, Joyent, Inc.
 */

var cmdutil = require('cmdutil');
var moray = require('../lib');
var moraycli = require('../lib/cmd');

var clientOptions, parser, sql, client, opts;

cmdutil.configure({
    'usageMessage': 'execute raw SQL on Moray-backed database',
    'synopses': [ moraycli.commonUsage + ' [-r] SQL' ]
});

clientOptions = {};
opts = {
    readOnlyOverride: false
};

parser = moraycli.parseCliOptions({
    'argv': process.argv,
    'env': process.env,
    'errstream': process.stderr,
    'extraOptStr': 'r',
    'clientOptions': clientOptions,
    'onUsage': cmdutil.usage,
    'onOption': function (option) {
        if (option.option === 'r') {
            opts.readOnlyOverride = true;
        } else {
            cmdutil.usage();
        }
    }
});

if (parser.optind() >= process.argv.length) {
    cmdutil.usage('missing required argument: "sql"');
}

sql = process.argv[parser.optind()];
client = moray.createClient(clientOptions);
client.on('error', cmdutil.fail);
client.on('connect', function onConnect() {
    var req = client.sql(sql, opts);

    req.once('error', cmdutil.fail);

    req.on('record', function (obj) {
        if (typeof (obj) === 'object' && obj !== null)
            console.log(JSON.stringify(obj, null, 2));
    });

    req.once('end', function () {
        moraycli.cliFinish(cmdutil, client);
        client.close();
    });
});
